{"version":3,"sources":["components/todo/form.js","components/todo/list.js","components/header.js","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","props","useState","item","setItem","handleInputChange","e","itemUpdate","target","name","value","Form","onSubmit","preventDefault","reset","handleSubmit","Card","Body","Title","Group","controlId","Label","Control","type","placeholder","onChange","defaultValue","min","max","Button","variant","TodoList","ListGroup","className","list","map","Item","complete","onClick","handleComplete","_id","text","assignee","Header","Navbar","bg","Brand","href","App","setList","useEffect","initList","uuidv4","difficulty","document","title","filter","length","Container","Row","Col","lg","md","sm","Math","random","id","i","newList","listItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8b8c72d7.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {Form, Button, Card} from 'react-bootstrap';\n\nexport default function TodoForm (props){\n\n  var [item, setItem] = useState({});\n\n  function handleInputChange (e){\n    let itemUpdate = {\n      ...item,\n      [e.target.name]: e.target.value,\n    };\n    setItem(itemUpdate);\n  }\n\n  function handleSubmit (e) {\n    e.preventDefault();\n    e.target.reset();\n    props.handleSubmit(item);\n    setItem({});\n  }\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit} >\n        <Card>\n          <Card.Body>\n            <Card.Title>Add To Do Item</Card.Title>\n\n            <Form.Group controlId=\"item\">\n              <Form.Label>To Do Item</Form.Label>\n              <Form.Control \n                name=\"text\"\n                type=\"text\"\n                placeholder=\"Item Details\"\n                onChange={handleInputChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"assignee\">\n              <Form.Label>Assigned To</Form.Label>\n              <Form.Control \n                name=\"assignee\"\n                type=\"text\"\n                placeholder=\"Assignee Name\"\n                onChange={handleInputChange}\n              />\n            </Form.Group>\n            \n            <Form.Group controlId=\"difficulty\">\n              <Form.Label>Difficulty Rating</Form.Label>\n              <Form.Control \n                defaultValue=\"1\"\n                type=\"range\"\n                min=\"1\"\n                max=\"5\"\n                name=\"text\"\n                placeholder=\"Assignee Name\"\n                onChange={handleInputChange}\n              />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">Add Item</Button>\n          </Card.Body>\n        </Card>\n      </Form>\n    </>\n  );\n}\nTodoForm.propTypes = {\n  handleSubmit: PropTypes.func,\n};\n","import {React} from 'react';\nimport PropTypes from 'prop-types';\nimport {ListGroup} from 'react-bootstrap';\n\nexport default function TodoList (props){\n  return (\n    <ListGroup className='text-white'>\n      {props.list.map(item => (\n        <ListGroup.Item\n          className={`${item.complete? 'bg-success':'bg-danger'}`}\n          key={item._id}\n        >\n          <span onClick={() => props.handleComplete(item._id)}>\n            {item.text} -- Assignee: {item.assignee}\n          </span>\n        </ListGroup.Item>\n      ))}\n    </ListGroup>\n  );\n}\n\nTodoList.propTypes = {\n  handleComplete: PropTypes.func,\n  list: PropTypes.array,\n};\n","import {React} from 'react';\nimport {Navbar} from 'react-bootstrap';\n\nexport default function Header (){\n  return(\n    <>\n      <Navbar bg=\"primary\" variant=\"dark\">\n        <Navbar.Brand href=\"#home\">Home</Navbar.Brand>\n      </Navbar>\n    </>\n  );\n}","import {React, useState, useEffect} from 'react';\nimport TodoForm from './components/todo/form';\nimport TodoList from './components/todo/list';\nimport Header from './components/header';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './todo.scss';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default function App (){\n  let [list, setList] = useState([]);\n  \n  function addItem (item) {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list, item]);\n  }\n\n  function toggleComplete (id) {\n\n    let item = list.filter(i => i._id === id)[0] || {};\n    if (item._id) {\n      item.complete = !item.complete;\n      let newList = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList(newList);\n    }\n  }\n\n  useEffect(()=>{\n    let initList = [\n      { _id: uuidv4(), complete: true, text: 'Finish Form component', difficulty: 3, assignee: 'Peng Chen'},\n      { _id: uuidv4(), complete: true, text: 'Debug List component', difficulty: 2, assignee: 'Peng Chen'},\n      { _id: uuidv4(), complete: true, text: 'Finish bootstrap for app', difficulty: 4, assignee: 'Peng Chen'},\n      { _id: uuidv4(), complete: false, text: 'Setup Xbox series X', difficulty: 1, assignee: 'Peng Chen'},\n      { _id: uuidv4(), complete: false, text: 'Follow up with Nintendo Switch develivery', difficulty: 1, assignee: 'Peng Chen'},\n    ];\n    setList(initList);\n\n  },[]);\n\n  useEffect(()=>{\n    document.title = `To Do List: ${list.filter(item => !item.complete).length}`;\n  });\n\n  return (\n    <>\n      <Header/>\n      <Container className = 'p-3'>\n        <h2 className = 'text-white bg-dark mt-3 p-3'>\n        To Do List Manager ({list.filter(item => !item.complete).length})\n        </h2>\n        <Row className='font-weight-bold'>\n          <Col lg={4} md={6} sm={12} className = 'p-3'>\n            <TodoForm handleSubmit={addItem} />\n          </Col>\n          <Col lg={8} md={6} sm={12} className = 'p-3'>\n            <TodoList\n              list={list}\n              handleComplete={toggleComplete}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}