{"version":3,"sources":["hooks/useForm.js","components/todo/form.js","components/todo/list.js","components/header.js","url.js","context/settings.js","components/todo/settingsModal.js","App.js","reportWebVitals.js","index.js"],"names":["useForm","callback","useState","values","setValues","e","preventDefault","target","reset","persist","name","console","log","value","Number","TodoForm","props","handleSubmit","handleChange","Form","onSubmit","Card","Body","Title","Group","controlId","Label","Control","type","placeholder","onChange","defaultValue","min","max","Button","variant","TodoList","condition","error","Alert","className","list","map","item","Toast","onClose","handleDelete","_id","style","width","maxWidth","Header","complete","onClick","handleComplete","assignee","difficulty","Navbar","bg","Brand","href","SettingsContext","React","createContext","Settings","showCompleted","maxNum","sort","settings","setSettings","Provider","children","SettingsModel","newSettingsData","userSettings","appliedSettings","settingsContext","handleClose","useContext","Modal","show","onHide","closeButton","as","App","refresh","triggerRefresh","setList","setError","showSettings","setShowSettings","a","config","method","url","data","axios","message","id","filter","i","toggleSettings","useEffect","listData","getToDoList","document","title","length","Container","Row","Col","lg","md","sm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.62b2907e.chunk.js","sourcesContent":["import {useState} from 'react';\n\nexport default function useForm(callback){\n  const [values, setValues] = useState({});\n\n  function handleSubmit (e) {\n    e.preventDefault();\n    e.target.reset();\n    callback && callback(values);\n    setValues({});\n  }\n\n  function handleChange (e){\n    e.persist();\n\n    if (e.target.name === 'maxNum') {\n      setValues({...values,[e.target.name]: Number(e.target.value)});\n      return;\n    }\n\n    if (e.target.name === 'showCompleted') {\n      console.log('I am checked');\n      console.log(e.target.value);\n      setValues({...values,[e.target.name]: e.target.value==='yes'? true:false});\n      return;\n    }\n    \n    setValues({...values,[e.target.name]: e.target.value});\n  }\n\n  return [handleSubmit, handleChange, values];\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Form, Button, Card} from 'react-bootstrap';\nimport useForm from '../../hooks/useForm';\n\nexport default function TodoForm (props){\n\n  const [handleSubmit, handleChange] = useForm(props.handleSubmit);\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit} >\n        <Card>\n          <Card.Body>\n            <Card.Title>Add To Do Item</Card.Title>\n\n            <Form.Group controlId=\"item\">\n              <Form.Label>To Do Item</Form.Label>\n              <Form.Control \n                name=\"item\"\n                type=\"text\"\n                placeholder=\"Item Details\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"assignee\">\n              <Form.Label>Assigned To</Form.Label>\n              <Form.Control \n                name=\"assignee\"\n                type=\"text\"\n                placeholder=\"Assignee Name\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n            \n            <Form.Group controlId=\"difficulty\">\n              <Form.Label>Difficulty Rating</Form.Label>\n              <Form.Control \n                defaultValue=\"1\"\n                type=\"range\"\n                min=\"1\"\n                max=\"5\"\n                name=\"difficulty\"\n                placeholder=\"Assignee Name\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">Add Item</Button>\n          </Card.Body>\n        </Card>\n      </Form>\n    </>\n  );\n}\nTodoForm.propTypes = {\n  handleSubmit: PropTypes.func,\n};\n","import {React} from 'react';\nimport PropTypes from 'prop-types';\nimport {Alert, Toast} from 'react-bootstrap';\nimport {If, Then, Else} from 'react-if';\n\nexport default function TodoList (props){\n  return (\n    \n    <If condition={props.error}>\n      <Then>\n        <Alert className = 'bg-danger'>\n          <h2>\n            {props.error}\n          </h2>\n        </Alert>\n      </Then>\n      <Else>\n        {props.list.map(item => (\n          <Toast key={item._id} onClose={() => props.handleDelete(item._id)} style={{width: '100%',maxWidth: '100%'}}>\n            <Toast.Header>\n              <strong className={`${item.complete? 'bg-success':'bg-danger'} rounded mr-2 text-white p-1`} onClick={() => props.handleComplete(item._id)}>\n                {item.complete? 'Completed' : 'Pending'}\n              </strong>\n              <span className=\"ml-auto mr-auto h6\">{item.assignee}</span>\n            </Toast.Header>\n            <Toast.Body>\n              <span className='mr-auto h5'>{item.item}</span>\n              <small className='float-right'>{`Difficulty: ${item.difficulty}`}</small>\n            </Toast.Body>\n          </Toast>\n        ))}\n      </Else>\n    </If>\n\n  );\n}\n\nTodoList.propTypes = {\n  handleComplete: PropTypes.func,\n  list: PropTypes.array,\n  error: PropTypes.string,\n  handleDelete: PropTypes.func,\n};\n","import {React} from 'react';\nimport {Navbar} from 'react-bootstrap';\n\nexport default function Header (){\n  return(\n    <>\n      <Navbar bg=\"primary\" variant=\"dark\">\n        <Navbar.Brand href=\"#home\">Home</Navbar.Brand>\n      </Navbar>\n    </>\n  );\n}","//local testing url\n// export default 'http://localhost:3333/api/todo';\n\n// deployed back end url\nexport default 'https://peng-authenticated-api-server.herokuapp.com/api/todo';","import React, {useState} from 'react';\n\nexport const SettingsContext = React.createContext();\n//Usage:  import {AppContext} from 'this-file';\n\nfunction Settings(props){\n  const initSettings = {\n    showCompleted: false,\n    maxNum: 5,\n    sort: 'difficulty',\n  };\n\n  const [settings, setSettings] = useState(initSettings);\n\n  return (\n    <SettingsContext.Provider value = {{settings, setSettings}}>\n      {props.children}\n    </SettingsContext.Provider>\n  );\n\n}\n\nimport PropTypes from 'prop-types';\nSettings.propTypes = {\n  children: PropTypes.array,\n};\n\nexport default Settings;\n","import React, {useContext} from 'react';\nimport {Modal, Button, Form} from 'react-bootstrap'; \nimport PropTypes from 'prop-types';\nimport useForm from '../../hooks/useForm';\nimport {SettingsContext} from '../../context/settings.js';\n\n\nfunction SettingsModel (props){\n  \n  const [handleSubmit, handleChange] = useForm(changeSettings);\n\n  const settingsContext = useContext(SettingsContext);\n\n  const appliedSettings = settingsContext.settings;\n\n  function changeSettings (newSettingsData){\n\n    const userSettings = {\n      showCompleted: newSettingsData.showCompleted || appliedSettings.showCompleted,\n      maxNum: newSettingsData.maxNum || appliedSettings.maxNum,\n      sort: newSettingsData.sort || appliedSettings.sort,\n    };\n\n    settingsContext.setSettings(userSettings);\n\n    props.handleClose();\n  }\n\n  return (\n\n    <Modal show={props.show} onHide={props.handleClose} onSubmit={handleSubmit}>\n      <Modal.Header closeButton>\n        <Modal.Title>Settings</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form className = 'font-weight-bold'>\n\n          <Form.Group controlId='showCompleted'>\n            <Form.Label className='mr-3'>Show completed items?</Form.Label>\n            <Form.Control\n              name='showCompleted'\n              as='select'\n              onChange = {handleChange}\n            >\n              <option value=\"no\">No</option>\n              <option value=\"yes\">Yes</option>\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='maxNum'>\n            <Form.Label>How many items do you want to display per page?</Form.Label>\n            <Form.Control\n              as=\"select\"\n              name='maxNum'\n              type='text'\n              onChange = {handleChange}\n            >\n              <option value=\"5\">5 items</option>\n              <option value=\"6\">6 items</option>\n              <option value=\"7\">7 items</option>\n              <option value=\"8\">8 items</option>\n              <option value=\"9\">9 items</option>\n              <option value=\"10\">10 items</option>\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='sort'>\n            <Form.Label>How do you want to sort your to do items?</Form.Label>\n            <Form.Control\n              as=\"select\"\n              name='sort'\n              type='text'\n              onChange = {handleChange}\n            >\n              <option value=\"difficulty\">By difficulty ratings</option>\n              <option value=\"item\">By item info</option>\n              <option value=\"assignee\">By assignee name</option>\n            </Form.Control>\n          </Form.Group>\n\n          <Button variant=\"primary\" type='submit' className='float-right'>\n          Save Changes\n          </Button>\n          <Button variant=\"secondary\" onClick={props.handleClose}>\n            Cancel\n          </Button>\n        </Form>\n      </Modal.Body>\n\n    </Modal>\n  );\n}\n\n\nSettingsModel.propTypes = {\n  show: PropTypes.bool,\n  handleClose: PropTypes.func,\n  handleSubmit: PropTypes.func,\n};\n\nexport default SettingsModel;","import React, {useState, useEffect, useContext} from 'react';\nimport TodoForm from './components/todo/form';\nimport TodoList from './components/todo/list';\nimport Header from './components/header';\nimport {Container, Row, Col, Button} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport url from './url.js';\n// import useAjax from './hooks/useAjax';\nimport axios from 'axios';\nimport {SettingsContext} from './context/settings.js';\nimport SettingsModal from './components/todo/settingsModal.js';\n\nexport default function App (){\n\n  // const [setConfig, response, error] = useAjax();\n  const [refresh, triggerRefresh] = useState(false);\n  const [list, setList] = useState([]);\n  const [error, setError] = useState(null);\n  const [showSettings, setShowSettings] = useState(false);\n\n  const settingsContext = useContext(SettingsContext);\n\n  async function addItem (item) {\n    const config = {\n      method: 'post',\n      url,\n      data: {\n        ...item,\n        complete:false,\n      },\n    };\n    if (!config.data.difficulty) {\n      config.data.difficulty=1;\n    }\n    try {\n      await axios(config);\n      triggerRefresh(!refresh);\n      setError(null);\n    }\n    catch (error){\n      setError(error.message);\n    }\n  }\n\n  async function toggleComplete (id) {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    const config = {\n      method: 'put',\n      url: `${url}/${id}`,\n      data: {\n        ...item,\n        complete:!item.complete,\n      },\n    };\n    try {\n      await axios(config);\n      triggerRefresh(!refresh);\n      setError(null);\n    }\n    catch (error){\n      setError(error.message);\n    }\n  }\n\n  async function deleteItem(id){\n    const config = {\n      method: 'delete',\n      url: `${url}/${id}`,\n    };\n    try {\n      await axios(config);\n      triggerRefresh(!refresh);\n      setError(null);\n    }\n    catch (error){\n      setError(error.message);\n    }\n  }\n\n\n  // Runs on app load\n  useEffect( () => {\n    const getToDoList =  async () => {\n      const config = {\n        method: 'get',\n        url,\n      };\n      try{\n        const {data} = await axios(config);\n        if (settingsContext.settings.showCompleted===false){\n          let listData = data.filter(item => item.complete===false);\n          setList(listData);\n          \n          return;\n        }\n        setList(data);\n        setError(null);\n      }\n      catch (error){\n        setError(error.message);\n      }\n    };\n    getToDoList();\n  }, [refresh, settingsContext.settings]);\n  \n  useEffect(()=>{\n    document.title = `To Do List: ${list.filter(item => !item.complete).length}`;\n  });\n\n  function toggleSettings(){\n    setShowSettings(!showSettings);\n  }\n\n  return (\n    <>\n      <Header/>\n      <Container className = 'p-3'>\n        <h2 className = 'text-white bg-dark mt-3 p-3'>\n        To Do List Manager ({list.filter(item => !item.complete).length})\n          <Button className='float-right' variant=\"primary\" onClick={toggleSettings}>Settings</Button>\n        </h2>\n        <SettingsModal show={showSettings} handleClose={toggleSettings} ></SettingsModal>\n        <Row className='font-weight-bold'>\n          <Col lg={4} md={6} sm={12} className = 'p-3'>\n            <TodoForm handleSubmit={addItem} />\n          </Col>\n          <Col lg={8} md={6} sm={12} className = 'p-3'>\n            <TodoList\n              list={list}\n              handleComplete={toggleComplete}\n              handleDelete={deleteItem}\n              error={error}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport reportWebVitals from './reportWebVitals.js';\nimport SettingsContext from './context/settings.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SettingsContext>\n      <App />\n    </SettingsContext>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}