{"version":3,"sources":["components/todo/form.js","hooks/useForm.js","components/todo/list.js","components/header.js","url.js","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","props","callback","useState","difficulty","values","setValues","e","preventDefault","target","reset","persist","name","value","useForm","handleSubmit","handleChange","Form","onSubmit","Card","Body","Title","Group","controlId","Label","Control","type","placeholder","onChange","defaultValue","min","max","Button","variant","TodoList","ListGroup","condition","error","Item","className","list","map","item","Toast","onClose","handleDelete","_id","style","width","maxWidth","Header","complete","onClick","handleComplete","assignee","Navbar","bg","Brand","href","App","refresh","triggerRefresh","setList","setError","a","config","method","url","data","axios","message","id","filter","i","useEffect","getToDoList","console","log","document","title","length","Container","Row","Col","lg","md","sm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2OAKe,SAASA,EAAUC,GAAO,IAAD,ECHzB,SAAiBC,GAAU,IAAD,EACXC,mBAAS,CAACC,WAAW,IADV,mBAChCC,EADgC,KACxBC,EADwB,KAevC,MAAO,CAZP,SAAuBC,GACrBA,EAAEC,iBACFD,EAAEE,OAAOC,QACTR,GAAYA,EAASG,GACrBC,EAAU,CAACF,WAAW,KAGxB,SAAuBG,GACrBA,EAAEI,UACFL,EAAU,2BAAID,GAAL,kBAAaE,EAAEE,OAAOG,KAAOL,EAAEE,OAAOI,UAGbR,GDVCS,CAAQb,EAAMc,cAFb,mBAE/BA,EAF+B,KAEjBC,EAFiB,KAItC,OACE,mCACE,cAACC,EAAA,EAAD,CAAMC,SAAUH,EAAhB,SACE,cAACI,EAAA,EAAD,UACE,eAACA,EAAA,EAAKC,KAAN,WACE,cAACD,EAAA,EAAKE,MAAN,6BAEA,eAACJ,EAAA,EAAKK,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACN,EAAA,EAAKO,MAAN,yBACA,cAACP,EAAA,EAAKQ,QAAN,CACEb,KAAK,OACLc,KAAK,OACLC,YAAY,eACZC,SAAUZ,OAId,eAACC,EAAA,EAAKK,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACN,EAAA,EAAKO,MAAN,0BACA,cAACP,EAAA,EAAKQ,QAAN,CACEb,KAAK,WACLc,KAAK,OACLC,YAAY,gBACZC,SAAUZ,OAId,eAACC,EAAA,EAAKK,MAAN,CAAYC,UAAU,aAAtB,UACE,cAACN,EAAA,EAAKO,MAAN,gCACA,cAACP,EAAA,EAAKQ,QAAN,CACEI,aAAa,IACbH,KAAK,QACLI,IAAI,IACJC,IAAI,IACJnB,KAAK,aACLe,YAAY,gBACZC,SAAUZ,OAId,cAACgB,EAAA,EAAD,CAAQC,QAAQ,UAAUP,KAAK,SAA/B,+B,4BE5CG,SAASQ,EAAUjC,GAChC,OACE,cAACkC,EAAA,EAAD,UACE,eAAC,IAAD,CAAIC,UAAWnC,EAAMoC,MAArB,UACE,cAAC,IAAD,UACE,cAACF,EAAA,EAAUG,KAAX,CAAgBC,UAAY,YAA5B,SACE,6BACGtC,EAAMoC,YAIb,cAAC,IAAD,UACGpC,EAAMuC,KAAKC,KAAI,SAAAC,GAAI,OAClB,cAACP,EAAA,EAAUG,KAAX,UAGE,eAACK,EAAA,EAAD,CAAOC,QAAS,kBAAM3C,EAAM4C,aAAaH,EAAKI,MAAMC,MAAO,CAACC,MAAO,OAAOC,SAAU,QAApF,UACE,eAACN,EAAA,EAAMO,OAAP,WACE,wBAAQX,UAAS,UAAKG,EAAKS,SAAU,aAAa,YAAjC,gCAA4EC,QAAS,kBAAMnD,EAAMoD,eAAeX,EAAKI,MAAtI,SACGJ,EAAKS,SAAU,YAAc,YAEhC,sBAAMZ,UAAU,qBAAhB,SAAsCG,EAAKY,cAE7C,eAACX,EAAA,EAAMvB,KAAP,WACE,sBAAMmB,UAAU,aAAhB,SAA8BG,EAAKA,OACnC,uBAAOH,UAAU,cAAjB,+BAA+CG,EAAKtC,qBAXnDsC,EAAKI,e,YChBT,SAASI,IACtB,OACE,mCACE,cAACK,EAAA,EAAD,CAAQC,GAAG,UAAUvB,QAAQ,OAA7B,SACE,cAACsB,EAAA,EAAOE,MAAR,CAAcC,KAAK,QAAnB,sB,4BCHO,G,MAAA,gE,iBCMA,SAASC,IAAM,MAGMxD,oBAAS,GAHf,mBAGrByD,EAHqB,KAGZC,EAHY,OAIJ1D,mBAAS,IAJL,mBAIrBqC,EAJqB,KAIfsB,EAJe,OAKF3D,mBAAS,MALP,mBAKrBkC,EALqB,KAKd0B,EALc,iDAO5B,WAAwBrB,GAAxB,eAAAsB,EAAA,6DACQC,EAAS,CACbC,OAAQ,OACRC,MACAC,KAAK,2BACA1B,GADD,IAEFS,UAAS,KANf,kBAUUkB,IAAMJ,GAVhB,OAWIJ,GAAgBD,GAChBG,EAAS,MAZb,gDAeIA,EAAS,KAAMO,SAfnB,0DAP4B,kEA0B5B,WAA+BC,GAA/B,iBAAAP,EAAA,6DACMtB,EAAOF,EAAKgC,QAAO,SAAAC,GAAC,OAAIA,EAAE3B,MAAQyB,KAAI,IAAM,GAE1CN,EAAS,CACbC,OAAQ,MACRC,IAAI,GAAD,OAAKA,EAAL,YAAYI,GACfH,KAAK,2BACA1B,GADD,IAEFS,UAAUT,EAAKS,YARrB,kBAYUkB,IAAMJ,GAZhB,OAaIJ,GAAgBD,GAChBG,EAAS,MAdb,gDAiBIA,EAAS,KAAMO,SAjBnB,0DA1B4B,kEA+C5B,WAA0BC,GAA1B,eAAAP,EAAA,6DACQC,EAAS,CACbC,OAAQ,SACRC,IAAI,GAAD,OAAKA,EAAL,YAAYI,IAHnB,kBAMUF,IAAMJ,GANhB,OAOIJ,GAAgBD,GAChBG,EAAS,MARb,gDAWIA,EAAS,KAAMO,SAXnB,0DA/C4B,sBAwF5B,OAxBAI,qBAAW,YACQ,uCAAI,gCAAAV,EAAA,6DACbC,EAAS,CACbC,OAAQ,MACRC,OAHiB,kBAMIE,IAAMJ,GANV,gBAMVG,EANU,EAMVA,KACPN,EAAQM,GACRL,EAAS,MARQ,kDAWjBA,EAAS,KAAMO,SAXE,0DAAJ,qDAcjBK,KACC,CAACf,IAEJgB,QAAQC,IAAI,OAAQrC,GAEpBkC,qBAAU,WACRI,SAASC,MAAT,sBAAgCvC,EAAKgC,QAAO,SAAA9B,GAAI,OAAKA,EAAKS,YAAU6B,WAIpE,qCACE,cAAC9B,EAAD,IACA,eAAC+B,EAAA,EAAD,CAAW1C,UAAY,MAAvB,UACE,qBAAIA,UAAY,8BAAhB,iCACqBC,EAAKgC,QAAO,SAAA9B,GAAI,OAAKA,EAAKS,YAAU6B,OADzD,OAGA,eAACE,EAAA,EAAD,CAAK3C,UAAU,mBAAf,UACE,cAAC4C,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAI/C,UAAY,MAAvC,SACE,cAACvC,EAAD,CAAUe,aAjGQ,gDAmGpB,cAACoE,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAI/C,UAAY,MAAvC,SACE,cAACL,EAAD,CACEM,KAAMA,EACNa,eAtGgB,4CAuGhBR,aAvGgB,4CAwGhBR,MAAOA,eClHrB,IAYekD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACvC,EAAD,MAEFmB,SAASqB,eAAe,SAM1BZ,M","file":"static/js/main.8718c4a6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Form, Button, Card} from 'react-bootstrap';\nimport useForm from '../../hooks/useForm';\n\nexport default function TodoForm (props){\n\n  const [handleSubmit, handleChange] = useForm(props.handleSubmit);\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit} >\n        <Card>\n          <Card.Body>\n            <Card.Title>Add To Do Item</Card.Title>\n\n            <Form.Group controlId=\"item\">\n              <Form.Label>To Do Item</Form.Label>\n              <Form.Control \n                name=\"item\"\n                type=\"text\"\n                placeholder=\"Item Details\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"assignee\">\n              <Form.Label>Assigned To</Form.Label>\n              <Form.Control \n                name=\"assignee\"\n                type=\"text\"\n                placeholder=\"Assignee Name\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n            \n            <Form.Group controlId=\"difficulty\">\n              <Form.Label>Difficulty Rating</Form.Label>\n              <Form.Control \n                defaultValue=\"1\"\n                type=\"range\"\n                min=\"1\"\n                max=\"5\"\n                name=\"difficulty\"\n                placeholder=\"Assignee Name\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">Add Item</Button>\n          </Card.Body>\n        </Card>\n      </Form>\n    </>\n  );\n}\nTodoForm.propTypes = {\n  handleSubmit: PropTypes.func,\n};\n","import {useState} from 'react';\n\nexport default function useForm(callback){\n  const [values, setValues] = useState({difficulty:1});\n\n  function handleSubmit (e) {\n    e.preventDefault();\n    e.target.reset();\n    callback && callback(values);\n    setValues({difficulty:1});\n  }\n\n  function handleChange (e){\n    e.persist();\n    setValues({...values,[e.target.name]: e.target.value});\n  }\n\n  return [handleSubmit, handleChange, values];\n}","import {React} from 'react';\nimport PropTypes from 'prop-types';\nimport {ListGroup, Toast} from 'react-bootstrap';\nimport {If, Then, Else} from 'react-if';\n\nexport default function TodoList (props){\n  return (\n    <ListGroup>\n      <If condition={props.error}>\n        <Then>\n          <ListGroup.Item className = 'bg-danger'>\n            <h2>\n              {props.error}\n            </h2>\n          </ListGroup.Item>\n        </Then>\n        <Else>\n          {props.list.map(item => (\n            <ListGroup.Item\n              key={item._id}\n            >\n              <Toast onClose={() => props.handleDelete(item._id)} style={{width: '100%',maxWidth: '100%'}}>\n                <Toast.Header>\n                  <strong className={`${item.complete? 'bg-success':'bg-danger'} rounded mr-2 text-white p-1`} onClick={() => props.handleComplete(item._id)}>\n                    {item.complete? 'Completed' : 'Pending'}\n                  </strong>\n                  <span className=\"ml-auto mr-auto h6\">{item.assignee}</span>\n                </Toast.Header>\n                <Toast.Body>\n                  <span className='mr-auto h5'>{item.item}</span>\n                  <small className='float-right'>{`Difficulty: ${item.difficulty}`}</small>\n                </Toast.Body>\n              </Toast>\n            </ListGroup.Item>\n          ))}\n        </Else>\n      </If>\n    </ListGroup>\n  );\n}\n\nTodoList.propTypes = {\n  handleComplete: PropTypes.func,\n  list: PropTypes.array,\n  error: PropTypes.string,\n  handleDelete: PropTypes.func,\n};\n","import {React} from 'react';\nimport {Navbar} from 'react-bootstrap';\n\nexport default function Header (){\n  return(\n    <>\n      <Navbar bg=\"primary\" variant=\"dark\">\n        <Navbar.Brand href=\"#home\">Home</Navbar.Brand>\n      </Navbar>\n    </>\n  );\n}","//local testing url\n// export default 'http://localhost:3333/api/todo';\n\n// deployed back end url\nexport default 'https://peng-authenticated-api-server.herokuapp.com/api/todo';","import {React, useState, useEffect} from 'react';\nimport TodoForm from './components/todo/form';\nimport TodoList from './components/todo/list';\nimport Header from './components/header';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport url from './url.js';\n// import useAjax from './hooks/useAjax';\nimport axios from 'axios';\n\nexport default function App (){\n\n  // const [setConfig, response, error] = useAjax();\n  const [refresh, triggerRefresh] = useState(false);\n  const [list, setList] = useState([]);\n  const [error, setError] = useState(null);\n\n  async function addItem (item) {\n    const config = {\n      method: 'post',\n      url,\n      data: {\n        ...item,\n        complete:false,\n      },\n    };\n    try {\n      await axios(config);\n      triggerRefresh(!refresh);\n      setError(null);\n    }\n    catch (error){\n      setError(error.message);\n    }\n  }\n\n  async function toggleComplete (id) {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    const config = {\n      method: 'put',\n      url: `${url}/${id}`,\n      data: {\n        ...item,\n        complete:!item.complete,\n      },\n    };\n    try {\n      await axios(config);\n      triggerRefresh(!refresh);\n      setError(null);\n    }\n    catch (error){\n      setError(error.message);\n    }\n  }\n\n  async function deleteItem(id){\n    const config = {\n      method: 'delete',\n      url: `${url}/${id}`,\n    };\n    try {\n      await axios(config);\n      triggerRefresh(!refresh);\n      setError(null);\n    }\n    catch (error){\n      setError(error.message);\n    }\n  }\n\n\n  // Runs on app load\n  useEffect( () => {\n    const getToDoList =  async () => {\n      const config = {\n        method: 'get',\n        url,\n      };\n      try{\n        const {data} = await axios(config);\n        setList(data);\n        setError(null);\n      }\n      catch (error){\n        setError(error.message);\n      }\n    };\n    getToDoList();\n  }, [refresh]);\n  \n  console.log('list', list);\n  \n  useEffect(()=>{\n    document.title = `To Do List: ${list.filter(item => !item.complete).length}`;\n  });\n\n  return (\n    <>\n      <Header/>\n      <Container className = 'p-3'>\n        <h2 className = 'text-white bg-dark mt-3 p-3'>\n        To Do List Manager ({list.filter(item => !item.complete).length})\n        </h2>\n        <Row className='font-weight-bold'>\n          <Col lg={4} md={6} sm={12} className = 'p-3'>\n            <TodoForm handleSubmit={addItem} />\n          </Col>\n          <Col lg={8} md={6} sm={12} className = 'p-3'>\n            <TodoList\n              list={list}\n              handleComplete={toggleComplete}\n              handleDelete={deleteItem}\n              error={error}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}